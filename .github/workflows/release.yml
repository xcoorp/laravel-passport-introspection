name: "Release"
on:
  push:
    branches:
      - main
      - develop

permissions:
  contents: write
  pull-requests: write

jobs:
  github-release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      major: ${{ steps.release.outputs.major }}
      minor: ${{ steps.release.outputs.minor }}
    steps:
      - name: Set config and manifest files based on branch
        id: set_files
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "CONFIG_FILE=.github/release-please-config.json" >> $GITHUB_ENV
          else
            echo "CONFIG_FILE=.github/release-please-config-develop.json" >> $GITHUB_ENV
          fi
      - name: "Create GitHub Release"
        uses: googleapis/release-please-action@7987652d64b4581673a76e33ad5e98e3dd56832f # v4
        id: release
        with:
          target-branch: ${{ github.ref_name }}
          config-file: ${{ env.CONFIG_FILE }}
          manifest-file: .github/.release-please-manifest.json
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Tag versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

          # Extract version information
          TAG_NAME="${{ steps.release.outputs.tag_name }}"
          MAJOR="${{ steps.release.outputs.major }}"
          MINOR="${{ steps.release.outputs.minor }}"

          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            # For main branch: Major, Minor, and Latest tags
            git tag -d v$MAJOR || true
            git tag -d v$MAJOR.$MINOR || true
            git tag -d latest || true

            git push origin :v$MAJOR || true
            git push origin :v$MAJOR.$MINOR || true
            git push origin :latest || true

            git tag -a v$MAJOR -m "Release v$MAJOR"
            git tag -a v$MAJOR.$MINOR -m "Release v$MAJOR.$MINOR"
            git tag -a latest -m "Latest stable release"

            git push origin v$MAJOR
            git push origin v$MAJOR.$MINOR
            git push --force origin latest  # Force update latest tag

          else
            # For develop branch: Tag with full version (e.g., v1.2.3-beta.1)
            git tag -d $TAG_NAME || true
            git push origin :$TAG_NAME || true

            git tag -a $TAG_NAME -m "Pre-release $TAG_NAME"
            git push origin $TAG_NAME
          fi
